#!/usr/bin/python3

#  pylint: disable=invalid-name

"""
Flash card app built for the Russian language.

Inflection charts are pulled from wiktionary.
"""

import argparse
import sys

from language_practice.gui import GuiApplication
from language_practice.sqlite import SqliteHandle
from language_practice.terminal import TerminalApplication


class Once(argparse.Action):
    """
    Action in parser to allow only a single instance of a given argument.
    """

    def __call__(self, parser, namespace, values, option_string=None):
        if getattr(namespace, self.dest, None) is not None:
            raise argparse.ArgumentError(
                self, f"Only one instance of {self.dest} allowed"
            )

        setattr(namespace, self.dest, values)


def main():
    """
    Main function
    """
    parse = argparse.ArgumentParser(
        prog="language-practice", description="Flashcard app"
    )
    parse.add_argument("-t", "--traceback", action="store_true")
    parse.add_argument("-g", "--gui", action="store_true")
    parse.add_argument("-d", "--db", action="store", required=True)
    args = parse.parse_args()

    try:
        handle = SqliteHandle(args.db)
    except Exception as err:  # pylint: disable=broad-exception-caught
        if args.traceback:
            raise err
        print(f"{err}")
        sys.exit(1)

    try:
        all_sets = handle.get_all_sets()
        if args.gui:
            gui = GuiApplication(handle, all_sets)
            gui.run()
        else:
            tui = TerminalApplication(handle, all_sets)
            tui.run()
    except Exception as err:  # pylint: disable=broad-exception-caught
        if args.traceback:
            raise err

        print(f"{err}")
        handle.close()
        sys.exit(1)
    except KeyboardInterrupt:
        print("Exiting...")
        handle.close()
    else:
        handle.close()


if __name__ == "__main__":
    main()
